{"version":3,"sources":["Pet.js","Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","React","Component","petfinder","key","secret","Results","search","pet","find","output","then","data","pets","Array","isArray","setState","state","map","breeds","join","contact","city","mapStateToProps"],"mappings":"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","file":"Results.30829819.map","sourceRoot":"../src","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nclass Pet extends React.Component {\n  render() {\n    const { name, animal, breed, media, location, id } = this.props;\n\n    let photos = [];\n\n    if (media && media.photos && media.photos.photo) {\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === 'pn')\n    }\n\n    const hero = photos[0] ? photos[0].value : \"http://placecorgi.com/300/300\";\n\n    return (\n      <Link to={`/details/${id}`} className=\"pet\">\n        <div className=\"image-container\">\n          <img src={hero} alt={name} />\n        </div>\n        <div className=\"info\">\n          <h1>{name}</h1>\n          <h2>{animal} - {breed} - {location}</h2>\n        </div>\n      </Link>\n    )\n  }\n}\n\nexport default Pet;\n","import React, { Component } from \"react\";\nimport pf from \"petfinder-client\";\nimport Pet from \"./Pet\";\nimport SearchBox from \"./SearchBox\";\nimport { connect } from \"react-redux\";\n\nconst petfinder = pf({\n  key: process.env.API_KEY,\n  secret: process.env.API_SECRET\n});\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pets: []\n    };\n  }\n\n  componentDidMount() {\n    this.search();\n  }\n\n  search = () => {\n    petfinder.pet\n      .find({\n        output: \"full\",\n        location: this.props.location,\n        animal: this.props.animal,\n        breed: this.props.breed\n      })\n      .then(data => {\n        let pets;\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\n          if (Array.isArray(data.petfinder.pets.pet)) {\n            pets = data.petfinder.pets.pet;\n          } else {\n            pets = [data.petfinder.pets.pet];\n          }\n        } else {\n          pets = [];\n        }\n        this.setState({\n          pets\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"search\">\n        <SearchBox search={this.search} />\n        {this.state.pets.map(pet => {\n          let breed;\n\n          if (Array.isArray(pet.breeds.breed)) {\n            breed = pet.breeds.breed.join(\", \");\n          } else {\n            breed = pet.breeds.breed;\n          }\n\n          return (\n            <Pet\n              key={pet.id}\n              animal={pet.animal}\n              name={pet.name}\n              breed={breed}\n              media={pet.media}\n              location={`${pet.contact.city}, ${pet.contact.state}`}\n              id={pet.id}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ location, breed, animal }) => ({\n  location,\n  breed,\n  animal\n});\n\nexport default connect(mapStateToProps)(Results);\n"]}